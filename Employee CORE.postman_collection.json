{
	"info": {
		"_postman_id": "11dae62b-c7b8-433c-8fd2-bc8dc8974d2e",
		"name": "Employee CORE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15129015",
		"_collection_link": "https://gold-koskv.postman.co/workspace/Employee-service~70bed99b-2d85-4aac-bcde-2f3de3187ca6/collection/15129015-11dae62b-c7b8-433c-8fd2-bc8dc8974d2e?action=share&creator=15129015&source=collection_link"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get admin token Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"password\"},\r",
									"        {key:\"username\", value: \"admin\"},\r",
									"        {key:\"password\", value: \"admin\"},\r",
									"        {key:\"client_id\", value: \"core\"},\r",
									"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('ACCESS_TOKEN', responseJson['access_token']);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}/vacationType/1",
							"host": [
								"{{URL_BASE}}"
							],
							"path": [
								"vacationType",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user token Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"password\"},\r",
									"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
									"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
									"        {key:\"client_id\", value: \"core\"},\r",
									"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.collectionVariables.set('ACCESS_TOKEN_USER', responseJson['access_token']);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}/vacationType/1",
							"host": [
								"{{URL_BASE}}"
							],
							"path": [
								"vacationType",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "employee-controller",
			"item": [
				{
					"name": "GET - employee",
					"item": [
						{
							"name": "Size&Page",
							"item": [
								{
									"name": "Get employee  - size & page - auth Admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var data = pm.response.json().content;\r",
													"\r",
													"pm.test('Test size param. Count of employee = ' + data.length + ' if size(param = 5)', function () {\r",
													"    pm.expect(data.length).to.equal(5);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/?size=5&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												""
											],
											"query": [
												{
													"key": "size",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG -  Get employee  - size = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error if size(param) = 0\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле size - Значение должно быть меньше 500 и больше 1\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/?size=0",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "size",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG -  Get employee  - size = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check error if size(param) = 1\", function () {\r",
													"    pm.expect(jsonData.content.length).to.eql(1);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/?size=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "size",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG -  Get employee  - size = 500",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check if size(param) = MAX(500)\", function () {\r",
													"    pm.expect(jsonData.content.length).to.be.above(100);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/?size=500",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "size",
													"value": "500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG -  Get employee  - size = 501",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error if size(param) = 0\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле size - Значение должно быть меньше 500 и больше 1\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/?size=501",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "size",
													"value": "501"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG -  Get employee  - size = String",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check error if size(param) = String\", function () {\r",
													"    pm.expect(data[0].description).to.contain(\"Поле size - Failed to convert property value of type\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/?size=^Text",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "size",
													"value": "^Text"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ID",
							"item": [
								{
									"name": "Get employee  on ID Param success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Returned ID = \" + jsonData.content[0].id , function () {\r",
													"   \r",
													"    pm.expect(jsonData.content[0].id).to.eql(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID Param success Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Returned ID = \" + jsonData.content[0].id , function () {\r",
													"   \r",
													"    pm.expect(jsonData.content[0].id).to.eql(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=110",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "110"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - error - auth User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
													"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_user', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2"
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - success - auth Kadry",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check responce\", function () {\r",
													"    pm.expect(jsonData.content[0].id).to.eql(4);\r",
													"    pm.expect(jsonData.total).to.eql(1);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_kadry}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=4",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - success - auth Buhgalter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check responce\", function () {\r",
													"    pm.expect(jsonData.content[0].id).to.eql(5);\r",
													"    pm.expect(jsonData.total).to.eql(1);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_buhgalter}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=5",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - error - auth Sales",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_sales', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_sales}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=5",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - error - auth RN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_rn', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=6",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - error - auth Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_account', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_account}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=5",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - error - auth Top",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"top@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_top', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_top}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=8",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - if Id not Exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Get employee on Id - if not Exist\" , function () {\r",
													"   \r",
													"    pm.expect(jsonData.total).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=223332",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "223332"
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - Param = 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													" var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Get employee on Id - if ID = 0\" , function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле id - must be greater than 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=0",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "0"
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  on ID - Param = string",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													" var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Get employee on Id - if ID = 0\" , function () {\r",
													"    pm.expect(data[0].description).to.contain(\"Поле id - Failed to convert property value of type 'java.lang.String'\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=text",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "text"
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Get employee  on ID - Param = spec - % - (http://jira.lan:8080/browse/IC-422)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													" var data = JSON.parse(responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?id=%",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "%"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "fullName",
							"item": [
								{
									"name": "BUG! Get employee  - fullName Param - EXIST - (http://jira.lan:8080/browse/IC-404)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var data = pm.response.json().content;\r",
													"\r",
													"pm.test('FIO \"Андреев Андрей Андреевич\" count must be = 1', function () {\r",
													"    pm.expect(data.length).to.equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?fullName=Андреев Андрей Андреевич",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "Андреев Андрей Андреевич"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - fullName Param - number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check response if FullName param = number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.total).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?fullName=123",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "123"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - fullName Param - fullName not Exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check response if FullName param = number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.total).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?fullName=Героев Зинаид Робертович",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "Героев Зинаид Робертович"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Technology - доработать!",
							"item": [
								{
									"name": "? Get employee  - technology Param - auth Admin - задача http://jira.lan:8080/browse/IC-405",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?technology=Java",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "Java"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "? Get employee  - technology Param - not EXIST - задача http://jira.lan:8080/browse/IC-405 Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.total).to.eql(0);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?technology=Technology_not_Exist",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "Technology_not_Exist"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PositionID - доработать!",
							"item": [
								{
									"name": "Get employee  - PositionId param = Exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"console.log(jsonData.length);\r",
													"\r",
													"\r",
													"pm.test(\"All Position ID  = 2\", function () {\r",
													"for (var i = 0; i < jsonData.length; i++){\r",
													"        pm.expect(jsonData[i].position.id).to.eql(2);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?positionId=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "2"
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - PositionId param = 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error msg if - positionId = 0\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле positionId - must be greater than 0\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?positionId=0",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - PositionId param = String",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Chech error if positionId - string\", function () {\r",
													"    pm.expect(data[0].description).to.contain(\"nested exception is java.lang.NumberFormatException: For input string\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?positionId=text",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "text"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - PositionId param = very big number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    pm.expect(data[0].description).to.contain(\"nested exception is java.lang.NumberFormatException: For input string\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?positionId=4564612156421564333232428798654654896548965",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "4564612156421564333232428798654654896548965"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "MainDepartmentID",
							"item": [
								{
									"name": "Get employee  - mainDepartmentId Param - auth Admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"console.log(jsonData.length);\r",
													"\r",
													"pm.test(\"All MainDepartament ID  = 3\", function () {\r",
													"for (var i = 0; i < jsonData.length; i++){\r",
													"        pm.expect(jsonData[i].mainDepartment.id).to.eql(3);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?mainDepartmentId=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - error - mainDepartmentId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error if mainDepartmentId = 0\", function () {\r",
													"        pm.expect(data[0].description).to.eql(\"Поле mainDepartmentId - must be greater than 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?mainDepartmentId=0",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee  - error - mainDepartmentId = text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json().content;\r",
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error if mainDepartmentId = 0\", function () {\r",
													"        pm.expect(data[0].description).to.contain(\"Поле mainDepartmentId - Failed to convert property value of type\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/filter?mainDepartmentId=text",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"filter"
											],
											"query": [
												{
													"key": "size",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "id",
													"value": "2",
													"disabled": true
												},
												{
													"key": "fullName",
													"value": "string",
													"disabled": true
												},
												{
													"key": "technology",
													"value": "string",
													"disabled": true
												},
												{
													"key": "positionId",
													"value": "0",
													"disabled": true
												},
												{
													"key": "mainDepartmentId",
													"value": "text"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get all employee - success - auth Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    var countObjects = jsonData.content.length;\r",
											"    console.log(countObjects);\r",
											"\r",
											"pm.test(\"Test total returned objects (total = content.length)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.total).to.eql(countObjects);\r",
											"\r",
											"});\r",
											"\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"content\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"name\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"surname\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"middleName\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"birthDate\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"employmentDate\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mainDepartment\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"name\"\r",
											"              ]\r",
											"            },\r",
											"            \"position\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"value\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"value\"\r",
											"              ]\r",
											"            },\r",
											"            \"grade\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"value\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"value\"\r",
											"              ]\r",
											"            },\r",
											"            \"employeeStatus\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"employeeStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"employeeStatus\"\r",
											"              ]\r",
											"            },\r",
											"            \"workFormat\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"value\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"value\"\r",
											"              ]\r",
											"            },\r",
											"            \"employmentType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"salary\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"salary\": {\r",
											"                  \"type\": \"number\"\r",
											"                },\r",
											"                \"startDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"isPlanned\": {\r",
											"                  \"type\": \"boolean\"\r",
											"                },\r",
											"                \"comment\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"salary\",\r",
											"                \"startDate\",\r",
											"                \"isPlanned\",\r",
											"                \"comment\"\r",
											"              ]\r",
											"            },\r",
											"            \"city\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"employeeContact\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"id\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"phone\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"telegram\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"email\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"id\",\r",
											"                \"phone\",\r",
											"                \"telegram\",\r",
											"                \"email\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"name\",\r",
											"            \"surname\",\r",
											"            \"middleName\",\r",
											"            \"birthDate\",\r",
											"            \"employmentDate\",\r",
											"            \"mainDepartment\",\r",
											"            \"position\",\r",
											"            \"grade\",\r",
											"            \"employeeStatus\",\r",
											"            \"workFormat\",\r",
											"            \"employmentType\",\r",
											"            \"salary\",\r",
											"            \"city\",\r",
											"            \"employeeContact\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"total\": {\r",
											"      \"type\": \"integer\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"content\",\r",
											"    \"total\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"tv4.setErrorReporter(function (error) {\r",
											"    return \"Error is here: \" + error.dataPath + \" in schema \" + error.schemaPath;\r",
											"});\r",
											"\r",
											"pm.test(\"Validation schema\", function(){\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all employee - error - auth User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET - dashboard",
					"item": [
						{
							"name": "Get dashboard  - mainDepartmentId Param",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee.lan/api/dashboard/filter?employee=2\n",
									"protocol": "http",
									"host": [
										"employee",
										"lan"
									],
									"path": [
										"api",
										"dashboard",
										"filter"
									],
									"query": [
										{
											"key": "size",
											"value": "10",
											"disabled": true
										},
										{
											"key": "id",
											"value": "2",
											"disabled": true
										},
										{
											"key": "fullName",
											"value": "string",
											"disabled": true
										},
										{
											"key": "positionId",
											"value": "0",
											"disabled": true
										},
										{
											"key": "employee",
											"value": "2\n"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "ROLES",
							"item": [
								{
									"name": "Create Employee - error - auth User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
													"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_user', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - success - auth Kadry",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_kadry}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - buhgalter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_buhgalter}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - auth Sales",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_sales', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_sales}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - auth RN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_rn', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - auth Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_account', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_account}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - auth Top",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"   \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"top@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_top', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_top}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "NameTests",
							"item": [
								{
									"name": "Name",
									"item": [
										{
											"name": "Create Employee - error - Name null - admin",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле name: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": null,\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - error - Name = \" \"",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле name: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \" \",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bug - Create Employee - error - Name = number (http://jira.lan:8080/browse/IC-410)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле name: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": 123,\r\n  \"surname\": 123,\r\n  \"middleName\": 432,\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{base_url}}/employee/{{empl_id}}",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee",
														"{{empl_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - Name = Max Size (255)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});\r",
															"\r",
															"//-----------------------------------------------\r",
															" function randomString(length=1) {\r",
															"        let randomString = \"\";\r",
															"        for (let i = 0; i < length; i++){\r",
															"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
															"        }\r",
															"        return randomString;\r",
															"    }\r",
															"    \r",
															"    STRING_LEN = 255\r",
															"    pm.collectionVariables.set('RandomString255', randomString(STRING_LEN));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"var jsonData = pm.response.json();\r",
															"\r",
															"var name = pm.collectionVariables.get('RandomString255');\r",
															"  \r",
															"pm.test(\"Name 255 symbols length - TEst\", function () {\r",
															"    pm.expect(jsonData.name).to.eql(name);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"{{RandomString255}}\",\r\n  \"surname\": \"test\",\r\n  \"middleName\": \"test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - error - Name = Max Size (256)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});\r",
															"\r",
															"//-----------------------------------------------\r",
															" function randomString(length=1) {\r",
															"        let randomString = \"\";\r",
															"        for (let i = 0; i < length; i++){\r",
															"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
															"        }\r",
															"        return randomString;\r",
															"    }\r",
															"    \r",
															"    STRING_LEN = 256\r",
															"    pm.collectionVariables.set('RandomString256', randomString(STRING_LEN));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"var jsonData = pm.response.json();\r",
															"  \r",
															"pm.test(\"Error when Name = 256 symbols\", function () {\r",
															"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
															"        pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(255)\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"{{RandomString256}}\",\r\n  \"surname\": \"test\",\r\n  \"middleName\": \"test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{base_url}}/employee/{{empl_id}}",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee",
														"{{empl_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Surname",
									"item": [
										{
											"name": "Create Employee - error - Surname null - admin",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"\r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"  \r",
															"    pm.expect(data[0].description).to.eql(\"Поле surname: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - error - Surname = \" \"",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле surname: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": \"  \",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bug - Create Employee - error - Surname = number (http://jira.lan:8080/browse/IC-410)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле surname: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": 987,\r\n  \"middleName\": \"Test1\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{base_url}}/employee/{{empl_id}}",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee",
														"{{empl_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - Surname= Max Size (255)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});\r",
															"\r",
															"//-----------------------------------------------\r",
															" function randomString(length=1) {\r",
															"        let randomString = \"\";\r",
															"        for (let i = 0; i < length; i++){\r",
															"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
															"        }\r",
															"        return randomString;\r",
															"    }\r",
															"    \r",
															"    STRING_LEN = 255\r",
															"    pm.collectionVariables.set('RandomString255', randomString(STRING_LEN));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"var jsonData = pm.response.json();\r",
															"\r",
															"var surname = pm.collectionVariables.get('RandomString255');\r",
															"  \r",
															"pm.test(\"Surname 255 symbols length - TEst\", function () {\r",
															"    pm.expect(jsonData.surname).to.eql(surname);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": \"{{RandomString255}}\",\r\n  \"middleName\": \"test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - error - Surname = Max Size (256)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});\r",
															"\r",
															"//-----------------------------------------------\r",
															" function randomString(length=1) {\r",
															"        let randomString = \"\";\r",
															"        for (let i = 0; i < length; i++){\r",
															"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
															"        }\r",
															"        return randomString;\r",
															"    }\r",
															"    \r",
															"    STRING_LEN = 256\r",
															"    pm.collectionVariables.set('RandomString256', randomString(STRING_LEN));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"var jsonData = pm.response.json();\r",
															"  \r",
															"pm.test(\"Error when Name = 256 symbols\", function () {\r",
															"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
															"        pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(255)\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": \"{{RandomString256}}\",\r\n  \"middleName\": \"test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{base_url}}/employee/{{empl_id}}",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee",
														"{{empl_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "MiddleName",
									"item": [
										{
											"name": "Create Employee - error - middleName null - admin",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"\r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"  \r",
															"    pm.expect(data[0].description).to.eql(\"Поле surname: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - error - middleName = \"  \"",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле name: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": \"  \",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bug - Create Employee - error - middleName = number (http://jira.lan:8080/browse/IC-410)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"  \r",
															"pm.test(\"Name Not Exist - Error test\", function () {\r",
															"\r",
															"    pm.expect(data[0].description).to.eql(\"Поле surname: must not be blank\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": 987,\r\n  \"middleName\": \"Test1\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Employee Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{base_url}}/employee/{{empl_id}}",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee",
														"{{empl_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - middleName = Max Size (255)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});\r",
															"\r",
															"//-----------------------------------------------\r",
															" function randomString(length=1) {\r",
															"        let randomString = \"\";\r",
															"        for (let i = 0; i < length; i++){\r",
															"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
															"        }\r",
															"        return randomString;\r",
															"    }\r",
															"    \r",
															"    STRING_LEN = 255\r",
															"    pm.collectionVariables.set('RandomString255', randomString(STRING_LEN));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"var jsonData = pm.response.json();\r",
															"\r",
															"var middleName = pm.collectionVariables.get('RandomString255');\r",
															"  \r",
															"pm.test(\"Surname 255 symbols length - TEst\", function () {\r",
															"    pm.expect(jsonData.middleName).to.eql(middleName);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"test\",\r\n  \"surname\": \"test\",\r\n  \"middleName\": \"{{RandomString255}}\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Employee - error - middleName = Max Size (256)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});\r",
															"\r",
															"//-----------------------------------------------\r",
															" function randomString(length=1) {\r",
															"        let randomString = \"\";\r",
															"        for (let i = 0; i < length; i++){\r",
															"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
															"        }\r",
															"        return randomString;\r",
															"    }\r",
															"    \r",
															"    STRING_LEN = 256\r",
															"    pm.collectionVariables.set('RandomString256', randomString(STRING_LEN));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var data = JSON.parse(responseBody);  \r",
															"var jsonData = pm.response.json();\r",
															"  \r",
															"pm.test(\"Error when Name = 256 symbols\", function () {\r",
															"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
															"        pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(255)\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"testq\",\r\n  \"surname\": \"test\",\r\n  \"middleName\": \"{{RandomString256}}\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
												},
												"url": {
													"raw": "{{base_url}}/employee",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Employee Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const postRequest = {\r",
															"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
															"  method: 'POST',\r",
															"  timeout: 0,\r",
															"  header: {\r",
															"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
															"  },\r",
															"  body: {\r",
															"    mode: 'urlencoded',\r",
															"    urlencoded: [\r",
															"        {key: \"grant_type\", value: \"password\"},\r",
															"        {key:\"username\", value: \"admin\"},\r",
															"        {key:\"password\", value: \"admin\"},\r",
															"        {key:\"client_id\", value: \"core\"},\r",
															"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
															"    ]}\r",
															"};\r",
															"pm.sendRequest(postRequest, function (err, res) {\r",
															"    var responseJson = res.json();\r",
															"    console.log(responseJson);\r",
															"    pm.environment.set('token_admin', responseJson['access_token']);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{base_url}}/employee/{{empl_id}}",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"employee",
														"{{empl_id}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "BirthDate",
							"item": [
								{
									"name": "BUG - Create Employee - if birthDate in future",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"console.log(\"Создана карточка сотрудника с ID: \" + jsonData.id);\r",
													"\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"id\": { \"type\": \"integer\" },\r",
													"    \"name\": { \"type\": \"string\" },\r",
													"    \"surname\": { \"type\": \"string\" },\r",
													"    \"middleName\": { \"type\": \"string\" },\r",
													"    \"birthDate\": { \"type\": \"string\" },\r",
													"    \"employmentDate\": { \"type\": \"string\" },\r",
													"    \"avatar\": { \"type\": \"string\" },\r",
													"    \"comment\": { \"type\": \"string\" },\r",
													"    \"fullAddress\": { \"type\": \"string\" },\r",
													"    \"mentor\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": { \"type\": \"integer\" },\r",
													"        \"name\": { \"type\": \"string\" },\r",
													"        \"surname\": { \"type\": \"string\" },\r",
													"        \"middleName\": { \"type\": \"string\" }\r",
													"      }\r",
													"    },\r",
													"    \"workFormat\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"position\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"curriculumVitaeId\": { \"type\": \"integer\" },\r",
													"    \"grade\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"employeeStatus\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"employeeStatus\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"location\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": { \"type\": \"integer\" },\r",
													"        \"region\": { \"type\": \"string\" },\r",
													"        \"city\": { \"type\": \"string\" }\r",
													"      }\r",
													"    },\r",
													"    \"mainDepartment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"name\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"employmentType\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"employmentTypeId\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    }\r",
													"  }\r",
													"};\r",
													"\r",
													"tv4.setErrorReporter(function (error) {\r",
													"    return \"Error is here: \" + error.dataPath + \" in schema \" + error.schemaPath;\r",
													"});\r",
													"\r",
													"pm.test(\"Validation schema\", function(){\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.2025\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - BirthDate null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Create Employee - error - BirthDate Integer",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": 1,\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "EmploymentDate",
							"item": [
								{
									"name": "Create Employee - error - employmentDate null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Create Employee - employmentDate  Integer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"wegw\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "DismissalDate",
							"item": [
								{
									"name": "BUG - Create Employee - if dismissalDate in future",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.2000\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"26.08.2025\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Create Employee - error - dismissalDate Exist in body - BUG (http://jira.lan:8080/browse/IC-408)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"console.log(\"Заведен БАГ - http://jira.lan:8080/browse/IC-408\");\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"05.05.2023\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Create Employee - error - dismissalDate - string",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check error text\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"could not be parsed at index 0\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"console.log(\"Заведен БАГ - http://jira.lan:8080/browse/IC-408\");\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"дата увольнения\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Create Employee - error - dismissalDate - number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check error text\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"could not be parsed at index 0\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"console.log(\"Заведен БАГ - http://jira.lan:8080/browse/IC-408\");\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": 0,\r\n  \"employmentDate\": 0,\r\n  \"dismissalDate\": 0,\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Avatar",
							"item": [
								{
									"name": "Create Employee - error - if Avatar = Empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error if avatar = empty('   ')\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(data[0].description).to.eql(\"Поле avatar: если поле не null, то должно быть не пустым\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \" \",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Critical ! - Create Employee - error - if Avatar Length > 100 000 symbols (http://jira.lan:8080/browse/IC-414)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"    pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error if avatar = empty('   ')\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(data[0].description).to.eql(\"Поле avatar: если поле не null, то должно быть не пустым\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//-----------создание рандомной строки------------------------\r",
													"\r",
													"  function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100000\r",
													"    pm.collectionVariables.set('RandomString100000', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"{{RandomString100000}}\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if Avatar = null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error if avatar = null - param not present\", function () {\r",
													"    pm.expect(jsonData.avatar).to.be.undefined;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": null,\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Comment",
							"item": [
								{
									"name": "Create Employee - error - if comment = Empty (\"   \")",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check error if avatar = empty('   ')\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(data[0].description).to.eql(\"Поле comment: если поле не null, то должно быть не пустым\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http:\\\\avatar.jpg\",\r\n  \"comment\": \" \",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if comment Length = 4000 symbols",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"    pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"    var comment = pm.collectionVariables.get(\"RandomString4000\");\r",
													"\r",
													"pm.test(\"Check if comment = 4000 symbols\", function () {\r",
													"    pm.expect(jsonData.comment.length).to.eql(4000);\r",
													"    pm.expect(jsonData.comment).to.eql(comment);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//-----------создание рандомной строки------------------------\r",
													"\r",
													"  function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 4000\r",
													"    pm.collectionVariables.set('RandomString4000', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"avatar http\",\r\n  \"comment\": \"{{RandomString4000}}\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if comment Length = 4001 symbols",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"    pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"    var comment = pm.collectionVariables.get(\"RandomString4001\");\r",
													"\r",
													"pm.test(\"Check error if comment = 4001 symbols\", function () {\r",
													"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(4000)\");\r",
													"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//-----------создание рандомной строки------------------------\r",
													"\r",
													"  function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 4001\r",
													"    pm.collectionVariables.set('RandomString4001', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"avatar http\",\r\n  \"comment\": \"{{RandomString4001}}\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if comment = null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error if comment = null - param not present\", function () {\r",
													"    pm.expect(jsonData.comment).to.be.undefined;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http:\\\\avatar.jpg\",\r\n  \"comment\": null,\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "FullAddress",
							"item": [
								{
									"name": "Create Employee - error - fullAddress null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - fullAddress = 1001 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"\r",
													"// ---------------------------------------------------------------\r",
													"    function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 1001\r",
													"    pm.collectionVariables.set('RandomString1001', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"description Error test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});\r",
													"\r",
													"pm.test(\"details Error test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(1000)\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"{{RandomString1001}}\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - fullAddress = 1000 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"\r",
													"// ---------------------------------------------------------------\r",
													"    function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    STRING_LEN = 1000\r",
													"    pm.collectionVariables.set('RandomString1000', randomString(STRING_LEN));\r",
													"\r",
													"    "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"var jsonData = pm.response.json();\r",
													"var adress = pm.collectionVariables.get(\"RandomString1000\");\r",
													"\r",
													"pm.test(\"description Error test\", function () {\r",
													"    pm.expect(jsonData.fullAddress).to.eql(adress);\r",
													"    pm.expect(jsonData.fullAddress.length).to.eql(1000);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"{{RandomString1000}}\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - fullAddress = empty (\"  \")",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"\r",
													"// ---------------------------------------------------------------\r",
													"    function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 1001\r",
													"    pm.collectionVariables.set('RandomString', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"\r",
													"pm.test(\"description Error test\", function () {\r",
													"    pm.expect(data[0].description).to.include(\"Поле fullAddress: если поле не null, то должно быть не пустым\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"  \",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "MentorId",
							"item": [
								{
									"name": "Create Employee error - mentorId - NOT Exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Работник с id 54654 не найден\");\r",
													"     pm.expect(jsonData.details).to.eql(\"Работник с id 54654 не найден\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 54654,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee  error- mentorId = 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле mentorId: must be greater than 0\");\r",
													"   \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 0,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - mentorId = null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error if mentorId = null - param not present\", function () {\r",
													"    pm.expect(jsonData.mentor).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": null,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee error - mentorId = Text (string)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Check error response test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String \");\r",
													"    pm.expect(jsonData.details).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": \"text\",\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "WorkFormatId",
							"item": [
								{
									"name": "Bug - Create Employee - error - workFormatId null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": null,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - workFormatId - very big number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": 156465466546465456465465,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - workFormatId  = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": 0,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - workFormatId  =  String",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cannot deserialize value of type \");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": \"text\",\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "EmploymentTypeId",
							"item": [
								{
									"name": "Bug - Create Employee - error - employmentTypeId null - admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"\r",
													"pm.test(\"Check error if employmentTypeId  = null - param not present\", function () {\r",
													"    pm.expect(jsonData.employmentType).to.be.undefined;\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": null,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - employmentTypeId - very big number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"check error response\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"out of range of long (-9223372036854775808 - 9223372036854775807)\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 23432343244434234432343,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": 1,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - employmentTypeId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"check error response\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Поле employmentTypeId: must be greater than 0\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 0,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": 1,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - employmentTypeId - not Exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"check error response\", function () {\r",
													"    pm.expect(jsonData.description).to.include(\"Тип трудоустройства не найден, id:\");\r",
													"    pm.expect(jsonData.details).to.include(\"Тип трудоустройства не найден, id:\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": 15647896,\r\n  \"positionId\": 2,\r\n  \"workFormatId\": 1,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - employmentTypeId = string",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"check error response\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"employmentTypeId\": \"text\",\r\n  \"positionId\": 2,\r\n  \"workFormatId\": 1,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 4,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PositionId",
							"item": [
								{
									"name": "Create Employee - error - positionId null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"    //pm.collectionVariables.set(\"employee_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n   \"positionId\": null,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - positionId - very big number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"    //pm.collectionVariables.set(\"employee_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"out of range of long (-9223372036854775808 - 9223372036854775807)\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n   \"positionId\": 123456489798798798798,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - positionId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"    //pm.collectionVariables.set(\"employee_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    pm.expect(data[0].description).to.include(\"Поле positionId: must be greater than 0\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n   \"positionId\": 0,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - positionId - not Exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Check error if value not exist \", function () {\r",
													"    pm.expect(jsonData.description).to.contain(\"Позиция сотрудника с id:\");\r",
													"    pm.expect(jsonData.details).to.contain(\"Позиция сотрудника с id:\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n   \"positionId\": 154789,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - positionId = string",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"    //pm.collectionVariables.set(\"employee_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error msg if PositionId = string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
													"    pm.expect(jsonData.details).to.eql(null);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n   \"positionId\": \"text\",\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CurriculumVitaeId",
							"item": [
								{
									"name": "Create Employee - error - curriculumVitaeId = null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"     var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error if curriculumVitaeId  = null - param not present\", function () {\r",
													"    pm.expect(jsonData.curriculumVitaeId).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": null,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - curriculumVitaeId = very big number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Check error \", function () {\r",
													"    pm.expect(jsonData.description).to.contain(\" out of range of long (-9223372036854775808 - 9223372036854775807)\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 12345678987987943243245,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - curriculumVitaeId = 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Check error if value not exist \", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле curriculumVitaeId: must be greater than 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 0,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - curriculumVitaeId - not Exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Check error if value not exist \", function () {\r",
													"    pm.expect(jsonData.description).to.contain(\"Резюме не найдено, id:\");\r",
													"    pm.expect(jsonData.details).to.contain(\"Резюме не найдено, id:\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 9223372036854775807,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - curriculumVitaeId = string",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);  \r",
													"\r",
													"pm.test(\"Check error if value not exist \", function () {\r",
													"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Ivanov\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://avatar.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": \"text\",\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GradeDictId",
							"item": [
								{
									"name": "Bug - Create Employee - error - grade_id null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "EmployeeStatusId",
							"item": [
								{
									"name": "Bug - Create Employee - error - employeeStatusId null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var data = JSON.parse(responseBody);  \r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"\r",
													"pm.test(\"Error message test\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "LocationId",
							"item": [
								{
									"name": "Create Employee - error - locationId null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error message request\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Ошбика добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if locationId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Error if LocationId = 0 \", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле locationId: must be greater than 0\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"locationId\": 0,\r\n  \"employeeStatusId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if locationId - not Exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Error if LocationId = 0 \", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле locationId: must be greater than 0\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"locationId\": 4589,\r\n  \"employeeStatusId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if locationId = big number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check Error if locationId big number\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"out of range of long (-9223372036854775808 - 9223372036854775807)\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"locationId\": 12333231234232123552123,\r\n  \"employeeStatusId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - if locationId = string",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var data = JSON.parse(responseBody);  \r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check Error text if locationId = string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cannot deserialize value of type `java.lang.Long` from String \");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"locationId\": \"ds\",\r\n  \"employeeStatusId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "MainDepartmentId",
							"item": [
								{
									"name": "Create Employee - error - mainDepartmentId null - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - mainDepartmentId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Поле mainDepartmentId: must be greater than 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 0\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Employee - error - mainDepartmentId - not Exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Department not found, id: \");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Константин\",\r\n  \"surname\": \"Костылев\",\r\n  \"middleName\": \"Владимирович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 156789\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Employee - success - admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
											"console.log(\"Создана карточка сотрудника с ID: \" + jsonData.id);\r",
											"\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": { \"type\": \"integer\" },\r",
											"    \"name\": { \"type\": \"string\" },\r",
											"    \"surname\": { \"type\": \"string\" },\r",
											"    \"middleName\": { \"type\": \"string\" },\r",
											"    \"birthDate\": { \"type\": \"string\" },\r",
											"    \"employmentDate\": { \"type\": \"string\" },\r",
											"    \"avatar\": { \"type\": \"string\" },\r",
											"    \"comment\": { \"type\": \"string\" },\r",
											"    \"fullAddress\": { \"type\": \"string\" },\r",
											"    \"mentor\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": { \"type\": \"integer\" },\r",
											"        \"name\": { \"type\": \"string\" },\r",
											"        \"surname\": { \"type\": \"string\" },\r",
											"        \"middleName\": { \"type\": \"string\" }\r",
											"      }\r",
											"    },\r",
											"    \"workFormat\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
											"    },\r",
											"    \"position\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
											"    },\r",
											"    \"curriculumVitaeId\": { \"type\": \"integer\" },\r",
											"    \"grade\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
											"    },\r",
											"    \"employeeStatus\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"employeeStatus\": { \"type\": \"string\" } }\r",
											"    },\r",
											"    \"location\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": { \"type\": \"integer\" },\r",
											"        \"region\": { \"type\": \"string\" },\r",
											"        \"city\": { \"type\": \"string\" }\r",
											"      }\r",
											"    },\r",
											"    \"mainDepartment\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"name\": { \"type\": \"string\" } }\r",
											"    },\r",
											"    \"employmentType\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": { \"employmentTypeId\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
											"    }\r",
											"  }\r",
											"};\r",
											"\r",
											"tv4.setErrorReporter(function (error) {\r",
											"    return \"Error is here: \" + error.dataPath + \" in schema \" + error.schemaPath;\r",
											"});\r",
											"\r",
											"pm.test(\"Validation schema\", function(){\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bug - Create Employee - error - create Double employee",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Иванов\",\r\n  \"surname\": \"Иван\",\r\n  \"middleName\": \"Иванович\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCH",
					"item": [
						{
							"name": "Patch ALL",
							"item": [
								{
									"name": "Create Employee - for PUT tests",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"console.log(\"Создана карточка сотрудника с ID: \" + jsonData.id);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1965\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"TestPatch\",\r\n  \"middleName\": \"TestPatch\",\r\n  \"birthDate\": \"04.05.2000\",\r\n  \"employmentDate\": \"04.06.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"stringPatch\",\r\n  \"comment\": \"stringPatch\",\r\n  \"fullAddress\": \"sstringPatchtring\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params = 0 error Tests",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Body matches error string, if params = 0\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Поле positionId: must be greater than 0\");\r",
													" pm.expect(pm.response.text()).to.include(\"Поле mentorId: must be greater than 0\");\r",
													"  pm.expect(pm.response.text()).to.include(\"Поле curriculumVitaeId: must be greater than 0\");\r",
													"   pm.expect(pm.response.text()).to.include(\"Поле workFormatId: must be greater than 0\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Поле locationId: must be greater than 0\");\r",
													"pm.expect(pm.response.text()).to.include(\"Поле gradeDictId: must be greater than 0\");  \r",
													"pm.expect(pm.response.text()).to.include(\"Поле employeeStatusId: must be greater than 0\");  \r",
													"pm.expect(pm.response.text()).to.include(\"Поле employmentTypeId: must be greater than 0\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"string\",\r\n  \"surname\": \"string\",\r\n  \"middleName\": \"string\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.04.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 0,\r\n  \"workFormatId\": 0,\r\n  \"employmentTypeId\": 0,\r\n  \"positionId\": 0,\r\n  \"curriculumVitaeId\": 0,\r\n  \"gradeDictId\": 0,\r\n  \"employeeStatusId\": 0,\r\n  \"locationId\": 0,\r\n  \"mainDepartmentId\": 0\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all dates = number - Bug ()",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"string\",\r\n  \"surname\": \"string\",\r\n  \"middleName\": \"string\",\r\n  \"birthDate\": 1,\r\n  \"employmentDate\": 2,\r\n  \"dismissalDate\": 3,\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 2,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ROLES",
							"item": [
								{
									"name": "Create Employee - for PUT tests",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"console.log(\"Создана карточка сотрудника с ID: \" + jsonData.id);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1965\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - error  - if auth USER",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
													"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_user', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params  - success - if auth Kadry",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"var idEmpl = pm.collectionVariables.get(\"empl_id\");\r",
													" var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check chanded CV\", function () {\r",
													"    pm.expect(jsonData.id).to.eql(idEmpl);\r",
													"     pm.expect(jsonData.name).to.eql(\"TestPatch\");\r",
													"      pm.expect(jsonData.birthDate).to.eql(\"04.04.2000\");\r",
													"      \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_kadry}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"TestPatch\",\r\n  \"middleName\": \"TestPatch\",\r\n  \"birthDate\": \"04.04.2000\",\r\n  \"employmentDate\": \"04.06.2023\",\r\n  \"dismissalDate\": \"30.06.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - error  - if auth Buhgalter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_buhgalter}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - error  - if auth Sales",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_sales', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_sales}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - error  - if auth RN",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_rn', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - error  - if auth Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_account', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_account}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH all params - error  - if auth Top",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"top@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_top', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_top}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.05.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Employee - delete Employee after PUT tests",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "MentorID",
							"item": [
								{
									"name": "PATCH success param - mentorId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check that mentorId was changed\", function () {\r",
													"    pm.expect(jsonData.mentor.id).to.eql(5);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"mentorId\": 5\r\n\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mentorId = Not Exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error response - mentorId is not exist\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Работник с id 789 не найден\");\r",
													"    pm.expect(jsonData.details).to.eql(\"Работник с id 789 не найден\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"mentorId\": 789\r\n\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mentorId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													" var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Test error response - Поле mentorId: must be greater than 0\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле mentorId: must be greater than 0\");\r",
													"    pm.expect(data[0].details).to.contain(\"must be greater than 0\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"mentorId\": 0\r\n\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH param - mentorId = null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"mentorId\": null\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH param - mentorId = big number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Check mentorId - if param = big number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"out of range of long (-9223372036854775808 - 9223372036854775807)\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"mentorId\": 45646589879865413258\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mentorId = String type",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error response - string\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.include(\"Cannot deserialize value of type `java.lang.Long` from String \\\"text\\\": not a valid\");\r",
													"    pm.expect(jsonData.details).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"mentorId\": \"text\"\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "mainDepartmentId",
							"item": [
								{
									"name": "PATCH param - mainDepartmentId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check that maindepartment was changed\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData.mainDepartment.id).to.eql(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"mainDepartmentId\": 1\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mainDepartmentId = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error responce\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Department not found, id: 0\");\r",
													"    pm.expect(jsonData.details).to.eql(\"Department not found, id: 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"mainDepartmentId\": 0\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mainDepartmentId = not found-not exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error responce\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Department not found, id: 456\");\r",
													"    pm.expect(jsonData.details).to.eql(\"Department not found, id: 456\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"mainDepartmentId\": 456\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mainDepartmentId = big number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error responce - bad request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"out of range of long (-9223372036854775808 - 9223372036854775807)\");\r",
													"    pm.expect(jsonData.details).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"mainDepartmentId\": 4567897456789765467498\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - mainDepartmentId = text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Check error responce\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String \");\r",
													"    pm.expect(jsonData.details).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"mainDepartmentId\": \"text\"\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "employeeStatusId",
							"item": [
								{
									"name": "PATCH Error param - employeeStatusId = Not Exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error responce\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Employee status с id 2232 не найден\");\r",
													"    pm.expect(jsonData.details).to.eql(\"Employee status с id 2232 не найден\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"employeeStatusId\": 2232\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PATCH Error param - employeeStatusId = String",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Test error responce if employeeStatus = String\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String \");\r",
													"    pm.expect(jsonData.details).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"employeeStatusId\": \"text@\"\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Name",
							"item": [
								{
									"name": "PATCH param - name - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Check changed name\", function () {\r",
													"   \r",
													"    pm.expect(jsonData.name).to.eql(\"TestPatch\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestPatch\"\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PATCH param - dismissalDate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Тип формата работы не найден, id: 4565\");\r",
											"    pm.expect(jsonData.details).to.contain(\"Тип формата работы не найден, id: 4565\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"dismissalDate\": \"04.05.2023\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - workFormatId = Not Exist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Тип формата работы не найден, id: 4565\");\r",
											"    pm.expect(jsonData.details).to.contain(\"Тип формата работы не найден, id: 4565\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"workFormatId\": 4565\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - workFormatId = Text",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
											"    pm.expect(jsonData.details).to.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"workFormatId\": \"Text@\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - employmentTypeId = String",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
											"    pm.expect(jsonData.details).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"employmentTypeId\": \"$#dd\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - employmentTypeId = Not Exist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Тип трудоустройства не найден, id: 478\");\r",
											"    pm.expect(jsonData.details).to.eql(\"Тип трудоустройства не найден, id: 478\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"employmentTypeId\": 478\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - positionId = String",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
											"    pm.expect(jsonData.details).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"positionId\": \"#$@#\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - positionId = Not Exist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Позиция сотрудника с id: 458 не найдена\");\r",
											"    pm.expect(jsonData.details).to.eql(\"Позиция сотрудника с id: 458 не найдена\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"positionId\": 458\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - positionId = 0",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"   \r",
											"    pm.expect(data[0].description).to.eql(\"Поле positionId: must be greater than 0\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"positionId\": 0\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - curriculumVitaeId = String",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
											"    pm.expect(jsonData.details).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"curriculumVitaeId\": \"#$@#\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - curriculumVitaeId = Not Exist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Резюме не найдено, id: 789\");\r",
											"    pm.expect(jsonData.details).to.eql(\"Резюме не найдено, id: 789\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"curriculumVitaeId\": 789\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - gradeDictId = String",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
											"    pm.expect(jsonData.details).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gradeDictId\": \"#$@#\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - gradeDictId = Not Exist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Grade с id 789 не существует\");\r",
											"    pm.expect(jsonData.details).to.eql(\"Grade с id 789 не существует\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gradeDictId\": 789\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - locationId = String",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contain(\"Cannot deserialize value of type `java.lang.Long` from String\");\r",
											"    pm.expect(jsonData.details).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"locationId\": \"#$@#\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error param - locationId = Not Exist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Test error if employmentTypeId = not Exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Локация не найдена, id: 789\");\r",
											"    pm.expect(jsonData.details).to.eql(\"Локация не найдена, id: 789\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"locationId\": 789\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH Error dismissalDate - BUG created - dismissalDate early then employmentDate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"TestPatch\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"04.04.2023\",\r\n  \"employmentDate\": \"04.04.2023\",\r\n  \"dismissalDate\": \"04.01.2023\",\r\n  \"avatar\": \"string\",\r\n  \"comment\": \"string\",\r\n  \"fullAddress\": \"string\",\r\n  \"mentorId\": 2,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 4,\r\n  \"positionId\": 1,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 3,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentI\": 1\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - delete Employee after PUT tests",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "PUT all",
							"item": [
								{
									"name": "Create Employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"empl_id\", jsonData.id);\r",
													"console.log(\"Создана карточка сотрудника с ID: \" + jsonData.id);\r",
													"\r",
													"\r",
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"id\": { \"type\": \"integer\" },\r",
													"    \"name\": { \"type\": \"string\" },\r",
													"    \"surname\": { \"type\": \"string\" },\r",
													"    \"middleName\": { \"type\": \"string\" },\r",
													"    \"birthDate\": { \"type\": \"string\" },\r",
													"    \"employmentDate\": { \"type\": \"string\" },\r",
													"    \"avatar\": { \"type\": \"string\" },\r",
													"    \"comment\": { \"type\": \"string\" },\r",
													"    \"fullAddress\": { \"type\": \"string\" },\r",
													"    \"mentor\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": { \"type\": \"integer\" },\r",
													"        \"name\": { \"type\": \"string\" },\r",
													"        \"surname\": { \"type\": \"string\" },\r",
													"        \"middleName\": { \"type\": \"string\" }\r",
													"      }\r",
													"    },\r",
													"    \"workFormat\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"position\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"curriculumVitaeId\": { \"type\": \"integer\" },\r",
													"    \"grade\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"employeeStatus\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"employeeStatus\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"location\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"id\": { \"type\": \"integer\" },\r",
													"        \"region\": { \"type\": \"string\" },\r",
													"        \"city\": { \"type\": \"string\" }\r",
													"      }\r",
													"    },\r",
													"    \"mainDepartment\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"id\": { \"type\": \"integer\" }, \"name\": { \"type\": \"string\" } }\r",
													"    },\r",
													"    \"employmentType\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": { \"employmentTypeId\": { \"type\": \"integer\" }, \"value\": { \"type\": \"string\" } }\r",
													"    }\r",
													"  }\r",
													"};\r",
													"\r",
													"tv4.setErrorReporter(function (error) {\r",
													"    return \"Error is here: \" + error.dataPath + \" in schema \" + error.schemaPath;\r",
													"});\r",
													"\r",
													"pm.test(\"Validation schema\", function(){\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - complete - admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Test changed fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"TestName\");\r",
													"    pm.expect(jsonData.surname).to.eql(\"TestSurname\");\r",
													"    pm.expect(jsonData.middleName).to.eql(\"TestMiddleName\");\r",
													"    pm.expect(jsonData.birthDate).to.eql(\"01.01.2003\"); \r",
													"    pm.expect(jsonData.employmentDate).to.eql(\"01.03.2023\");\r",
													"    pm.expect(jsonData.dismissalDate).to.eql(\"15.06.2023\");\r",
													"    pm.expect(jsonData.avatar).to.eql(\"http://pic.jpg\");\r",
													"    pm.expect(jsonData.comment).to.eql(\"Comment here\");\r",
													"    pm.expect(jsonData.fullAddress).to.eql(\"Moscow, Baumana\");\r",
													"    pm.expect(jsonData.mentor.id).to.eql(5);\r",
													"    pm.expect(jsonData.workFormat.id).to.eql(1);\r",
													"    pm.expect(jsonData.employmentType.employmentTypeId).to.eql(3);\r",
													"    pm.expect(jsonData.position.id).to.eql(4);\r",
													"    pm.expect(jsonData.curriculumVitaeId).to.eql(1);\r",
													"    pm.expect(jsonData.grade.id).to.eql(1);\r",
													"    pm.expect(jsonData.employeeStatus.id).to.eql(1);\r",
													"    pm.expect(jsonData.location.id).to.eql(1);\r",
													"    pm.expect(jsonData.mainDepartment.id).to.eql(2);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ROLES",
							"item": [
								{
									"name": "Change employee - Auth user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
													"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_user', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - auth Kadry",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check change CV if user = Kadry\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"TestName\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_kadry}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - auth Buhgalter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_buhgalter}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - auth Sales",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_sales', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_sales}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - auth RN",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_rn', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - auth Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_account', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_account}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - auth Top",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"top@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_top', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_top}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Birth date",
							"item": [
								{
									"name": "Bug - Change employee - If birthDate > dateNow - BUG",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2025\",\r\n  \"employmentDate\": \"01.03.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - error - birthDate - text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'еывы' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"еывы\",\r\n  \"employmentDate\": \"01.01.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - error - birthDate = null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": null,\r\n  \"employmentDate\": \"01.01.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - error - birthDate = boolean",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Expected array or string.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": false,\r\n  \"employmentDate\": \"01.01.2023\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - birthDate - number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'text' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": 123,\r\n  \"employmentDate\": \"01.01.2025\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - birthDate - Big Number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\" out of range of long (-9223372036854775808 - 9223372036854775807\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": 123456789465489346946,\r\n  \"employmentDate\": \"01.01.2025\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "employmentDate",
							"item": [
								{
									"name": "Bug - Change employee - employmentDate > dismissalDate - BUG!",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"console.log(\"Заведен БАГ - http://jira.lan:8080/browse/IC-407\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2024\",\r\n  \"employmentDate\": \"01.03.2024\",\r\n  \"dismissalDate\": \"15.02.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - employmentDate - text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'text' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"text\",\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - employmentDate - null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Check error message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": null,\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - employmentDate - boolean",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Check error message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Expected array or string.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": true,\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - employmentDate - number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'text' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": 1,\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - employmentDate - Big Number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Invalid value for EpochDay (valid values -365243219162 - 365241780471\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": 145648976543156489,\r\n  \"dismissalDate\": \"15.06.2023\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "dismissalDate",
							"item": [
								{
									"name": "Bug - Change employee - dismissalDate > date Now",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'text' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"15.06.2023\",\r\n  \"dismissalDate\": \"15.06.3025\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - dismissalDate - text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'text' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"15.06.2023\",\r\n  \"dismissalDate\": \"text\",\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - dismissalDate = null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.dismissalDate).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"15.06.2023\",\r\n  \"dismissalDate\": null,\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - dismissalDate = boolean",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"Expected array or string.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"15.06.2023\",\r\n  \"dismissalDate\": true,\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Change employee - dismissalDate - number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Text 'text' could not be parsed at index 0\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"15.06.2023\",\r\n  \"dismissalDate\": 23,\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change employee - dismissalDate - Big Number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.contain(\"TInvalid value for EpochDay \");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"TestName\",\r\n  \"surname\": \"TestSurname\",\r\n  \"middleName\": \"TestMiddleName\",\r\n  \"birthDate\": \"01.01.2003\",\r\n  \"employmentDate\": \"15.06.2023\",\r\n  \"dismissalDate\": 123158965451254565,\r\n  \"avatar\": \"http://pic.jpg\",\r\n  \"comment\": \"Comment here\",\r\n  \"fullAddress\": \"Moscow, Baumana\",\r\n  \"mentorId\": 5,\r\n  \"workFormatId\": 1,\r\n  \"employmentTypeId\": 3,\r\n  \"positionId\": 4,\r\n  \"curriculumVitaeId\": 1,\r\n  \"gradeDictId\": 1,\r\n  \"employeeStatusId\": 1,\r\n  \"locationId\": 1,\r\n  \"mainDepartmentId\": 2\r\n}"
										},
										"url": {
											"raw": "{{base_url}}/employee/{{empl_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee",
												"{{empl_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Create Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"empl_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Test\",\r\n  \"surname\": \"Test\",\r\n  \"middleName\": \"Test\",\r\n  \"birthDate\": \"26.08.1984\",\r\n  \"employmentDate\": \"03.03.2023\",\r\n  \"dismissalDate\": \"\",\r\n  \"avatar\": \"http://ava.jpg\",\r\n  \"comment\": \"Its me\",\r\n  \"fullAddress\": \"Yalta, Crimea\",\r\n  \"mentorId\": 1,\r\n  \"workFormatId\": 2,\r\n  \"employmentTypeId\": 2,\r\n  \"positionId\": 2,\r\n  \"curriculumVitaeId\": 3,\r\n  \"gradeDictId\": 2,\r\n  \"employeeStatusId\": 2,\r\n  \"locationId\": 2,\r\n  \"mainDepartmentId\": 3\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error - auth User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error - auth Kadry",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
											"        {key:\"password\", value: \"12345678\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_kadry}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error  - auth Buhgalter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
											"        {key:\"password\", value: \"12345678\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_buhgalter}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error - auth Sales",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
											"        {key:\"password\", value: \"12345678\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_sales', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_sales}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error - auth RN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
											"        {key:\"password\", value: \"12345678\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_rn', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_rn}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error - auth Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
											"        {key:\"password\", value: \"12345678\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_account', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_account}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - error - auth Top",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"top@irlix.ru\"},\r",
											"        {key:\"password\", value: \"12345678\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_top', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_top}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee - Success - admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/{{empl_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"{{empl_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Employee if it was deleted - Error",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check Error message\", function () {\r",
											"    pm.expect(jsonData.description).to.eql(\"Работник с id 568 не найден\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee/568",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee",
										"568"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "employee-contact-controller",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "ROLES",
							"item": [
								{
									"name": "BUG - Create contacts - error - auth User (http://jira.lan:8080/browse/IC-427 )",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
													"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_user', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 109\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID_2}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create contacts - success - auth Kadry",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_kadry}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Create contacts - error - auth Buhgalter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_buhgalter}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create contacts - error - auth Sales",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_sales', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_sales}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 112\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Create contacts - error - auth RN (http://jira.lan:8080/browse/IC-427)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_rn', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 112\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create contacts - auth Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_account', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_account}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create contacts - auth Top",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"top@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_top', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_top}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Phone tests",
							"item": [
								{
									"name": "Add contact - Phone - success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------------\r",
													"\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )\r",
													"//----------------------------------------------------------------\r",
													"   \r",
													"    function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    STRING_LEN = 5\r",
													"    pm.collectionVariables.set('username', randomString(STRING_LEN));\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check that contact was added",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													" var jsonData = pm.response.json();\r",
													" var id = pm.collectionVariables.get(\"contact_ID\");\r",
													"\r",
													"pm.test(\"Check - contact ID\", function () {\r",
													"    pm.expect(jsonData.id).to.eql(id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug! - Add contact - Phone - Double - already exist (http://jira.lan:8080/browse/IC-423)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------------\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID_2\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contacts 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contacts 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID_2}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Phone = String",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"abc\",\r\n  \"telegram\": \"kostikkv84\",\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Phone = Spec symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле phone: Не верный номер телефона\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"%&()$)\",\r\n  \"telegram\": \"kostikkv84\",\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG! - Add contact - Phone = Null  (http://jira.lan:8080/browse/IC-424)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": null,\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contacts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Phone = Empty",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле phone: Не верный номер телефона\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"   \",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Phone = 16 numbers (http://jira.lan:8080/browse/IC-425)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"789456987452\",\r\n  \"telegram\": \"{{$randomFileName}}\",\r\n  \"chatTelegramId\": \"{{$randomFileName}}\",\r\n  \"skype\": \"{{$randomJobType}}\",\r\n  \"email\": \"{{$randomFirstName}}@{{$randomDomainName}}.ru\",\r\n  \"employeeId\": 110\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Telegram tests",
							"item": [
								{
									"name": "Add contact - telegram - Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"Telegram1\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomBankAccountName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "BUG - Add contact - telegram - Double (http://jira.lan:8080/browse/IC-426)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID_2\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"Telegram1\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomBankAccountName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 64\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID_2}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Telegram = Null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check that Telegram wasn't Exist\", function () {\r",
													"      pm.expect(jsonData.telegram).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"78945612312\",\r\n  \"telegram\": null,\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Telegram = Number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"78945612312\",\r\n  \"telegram\": 45666,\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Telegram = 101 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 101\r",
													"    pm.collectionVariables.set('RandomString101', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"//var string = pm.collectionVariables.get(\"RandomString1001\");\r",
													"\r",
													"// pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error message if telegram > 101 symbols\", function () {\r",
													"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(100)\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"78945612312\",\r\n  \"telegram\": \"{{RandomString101}}\",\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Telegram = 100 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"var string = pm.collectionVariables.get(\"RandomString100\");\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.telegram).to.eql(string);\r",
													"});\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"78945612312\",\r\n  \"telegram\": \"{{RandomString100}}\",\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Telegram = \"Telegram name\" (http://jira.lan:8080/browse/IC-431)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"var string = pm.collectionVariables.get(\"RandomString100\");\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.telegram).to.eql(string);\r",
													"});\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"78915772312\",\r\n  \"telegram\": \"telegrame name\",\r\n  \"chatTelegramId\": \"{{$randomCatsImage}}\",\r\n  \"skype\": \"{{$randomFileName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 108\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Chat_telegram_id",
							"item": [
								{
									"name": "Add contact - Chat_telegram_id - Success Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"Test_Skype_chatTelegram\",\r\n  \"skype\": \"{{$randomCompanyName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 71\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Chat_telegram_id = Null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"\r",
													"pm.test(\"Check that chatTelegramId wasn't Exist\", function () {\r",
													"      pm.expect(jsonData.chatTelegramId).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": null,\r\n  \"skype\": \"{{$randomCompanyName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 71\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - error - chatTelegramId = 51 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 51\r",
													"    pm.collectionVariables.set('RandomString51', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"//var string = pm.collectionVariables.get(\"RandomString1001\");\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error message if chatTelegramId > 51 symbols\", function () {\r",
													"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(50)\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{RandomString51}}\",\r\n  \"skype\": \"{{$randomCompanyName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - success - chatTelegramId = 50 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 50\r",
													"    pm.collectionVariables.set('RandomString50', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"var string = pm.collectionVariables.get(\"RandomString50\");\r",
													"\r",
													"\r",
													"pm.test(\"Check chatTelegramId value\", function () {\r",
													"    pm.expect(jsonData.chatTelegramId).to.eql(string);\r",
													"    pm.expect(jsonData.chatTelegramId.length).to.eql(50);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{RandomString50}}\",\r\n  \"skype\": \"{{$randomCompanyName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - chatTelegramId = Empty (\"   \")",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    pm.expect(jsonData.chatTelegramId).to.eql(\"   \");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"   \",\r\n  \"skype\": \"{{$randomPhrase}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - admin Copy 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Skype",
							"item": [
								{
									"name": "Add contact - skype - Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"Test_Skype\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - skype - Double",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"//pm.collectionVariables.set(\"contact_ID_2\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error message\", function () {\r",
													"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
													"    pm.expect(jsonData.details).to.contain(\"ERROR: duplicate key value violates unique constraint\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"Test_Skype\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 71\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - skype = Null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"\r",
													"pm.test(\"Check that Skype wasn't Exist\", function () {\r",
													"      pm.expect(jsonData.skype).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": null,\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Skype = 101 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 101\r",
													"    pm.collectionVariables.set('RandomString101', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"//var string = pm.collectionVariables.get(\"RandomString1001\");\r",
													"\r",
													"// pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error message if skype > 101 symbols\", function () {\r",
													"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(100)\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{RandomString101}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Skype = 100 symbols",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"var string = pm.collectionVariables.get(\"RandomString100\");\r",
													"\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    pm.expect(jsonData.skype).to.eql(string);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{RandomString100}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Skype = Empty (\"   \")",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    pm.expect(jsonData.skype).to.eql(\"   \");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"   \",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Skype = \"Skype skype\" (http://jira.lan:8080/browse/IC-431)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    pm.expect(jsonData.skype).to.eql(\"   \");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"skype name\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 113\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Email tests",
							"item": [
								{
									"name": "Add contact - Email- Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomAbbreviation}}\",\r\n  \"email\": \"EmailTest@yandex.ru\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email - Double",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"//pm.collectionVariables.set(\"contact_ID_2\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error message\", function () {\r",
													"    pm.expect(jsonData.description).to.contain(\"добавления или обновления записи в бд\");\r",
													"    pm.expect(jsonData.details).to.contain(\"ERROR: duplicate key value violates unique constraint\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomAbbreviation}}\",\r\n  \"email\": \"EmailTest@yandex.ru\",\r\n  \"employeeId\": 71\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Email - Cyrillic (http://jira.lan:8080/browse/IC-429)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomAbbreviation}}\",\r\n  \"email\": \"емаил@яндекс.ru\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Email = Null (http://jira.lan:8080/browse/IC-428)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check that Email wasn't Exist\", function () {\r",
													"      pm.expect(jsonData.description).to.contain(\"JSON String, Number, Array, Object or token 'null'\");\r",
													"      pm.expect(jsonData.details).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": {{$randomColor}},\r\n  \"email\": null,\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Email = Empty (\" \") (http://jira.lan:8080/browse/IC-428)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"//----------------------------------------\r",
													"const randomNumber = _.random(10000000000,99999999999)\r",
													"pm.collectionVariables.set(\"rand_phone\", randomNumber )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"\r",
													"pm.test(\"Check that Skype wasn't Exist\", function () {\r",
													"      pm.expect(jsonData.skype).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": {{$randomColor}},\r\n  \"email\": \" \",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = 101 symbols Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 101\r",
													"    pm.collectionVariables.set('RandomString101', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"//var string = pm.collectionVariables.get(\"RandomString1001\");\r",
													"\r",
													"// pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check error message if skype > 101 symbols\", function () {\r",
													"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(100)\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{RandomString101}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"employeeId\": 70\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Email = 100 symbols Copy (http://jira.lan:8080/browse/IC-430)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 94\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"var string = pm.collectionVariables.get(\"RandomString100\");\r",
													"\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    pm.expect(jsonData.email).to.eql(string);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCity}}\",\r\n  \"email\": \"{{RandomString100}}@ya.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = email invalid (mail@domen..ru)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(jsonData.description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{RandomString100}}\",\r\n  \"email\": \"mail_12-3@123..ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = if Email with out @",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if @ not exist\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"123mail.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Email = with error domain (http://jira.lan:8080/browse/IC-429)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(jsonData.description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"123@yaru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = email\" \"email@ya.ru",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"12 3@ya.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = email@y a.ru",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"123@y a.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = @ya.ru",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"@ya.ru\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Email = mail@",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"mail@\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bug - Add contact - Email = mail@ya.ruururururururuur (http://jira.lan:8080/browse/IC-429)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 70\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"     pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check email if domen invalid\", function () {\r",
													"    pm.expect(data[0].description).to.eql(\"Поле email: must be a well-formed email address\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCountry}}\",\r\n  \"email\": \"mail@mail.rururureweew\",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add contact - Skype = Empty (\"   \")",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});\r",
													"\r",
													"//----------------------------------------------------------\r",
													"\r",
													" function randomString(length=1) {\r",
													"        let randomString = \"\";\r",
													"        for (let i = 0; i < length; i++){\r",
													"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
													"        }\r",
													"        return randomString;\r",
													"    }\r",
													"    \r",
													"    STRING_LEN = 100\r",
													"    pm.collectionVariables.set('RandomString100', randomString(STRING_LEN));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    var data = JSON.parse(responseBody);\r",
													"\r",
													"\r",
													" pm.collectionVariables.set(\"contact_ID\", jsonData.id);\r",
													"\r",
													"pm.test(\"Check telegram value\", function () {\r",
													"    pm.expect(jsonData.skype).to.eql(\"   \");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rand_phone}}\",\r\n  \"telegram\": \"{{$randomCurrencyName}}\",\r\n  \"chatTelegramId\": \"{{$randomCompanyName}}\",\r\n  \"skype\": \"{{$randomCurrencyName}}\",\r\n  \"email\": \"  \",\r\n  \"employeeId\": 111\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												"{{contact_ID}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Add contact if double - contacts Exists - error",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"   var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"     pm.expect(jsonData.details).to.contain(\"добавления или обновления записи в бд\");\r",
											"    pm.expect(jsonData.details).to.contain(\"duplicate key value violates unique constraint\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"phone\": \"79788065898\",\r\n  \"telegram\": \"kostikkv84\",\r\n  \"chatTelegramId\": \"inferno777\",\r\n  \"skype\": \"kostikkv84\",\r\n  \"email\": \"koskv@list.ru\",\r\n  \"employeeId\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/employee-contact",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "ROLES",
							"item": [
								{
									"name": "Get all contact info - auth User",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
													"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_user', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - auth Kadry",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"kadry@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_kadry', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_kadry}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - auth Buhgalter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"buhgalter@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_buhgalter', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_buhgalter}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - auth Sales",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"sales@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_sales', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_sales}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - auth RN",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"rn@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_rn', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - auth Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"accountt@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_account', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_account}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all contact info - auth Top",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"top@irlix.ru\"},\r",
													"        {key:\"password\", value: \"12345678\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_top', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_top}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/employee-contact",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"employee-contact"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get all contact info - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contact info - on ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check -contacts on ID received\", function () {\r",
											"   \r",
											"    pm.expect(jsonData.id).to.eql(4);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contact info - on ID - test response Schema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"telegram\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"skype\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"employee\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"surname\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"middleName\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"name\",\r",
											"        \"surname\",\r",
											"        \"middleName\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\",\r",
											"    \"phone\",\r",
											"    \"telegram\",\r",
											"    \"skype\",\r",
											"    \"email\",\r",
											"    \"employee\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"tv4.setErrorReporter(function (error) {\r",
											"    return \"Error is here: \" + error.dataPath + \" in schema \" + error.schemaPath;\r",
											"});\r",
											"\r",
											"pm.test(\"Validation schema\", function(){\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contact info - on ID = string",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check - contact received if - String\", function () {\r",
											"   \r",
											"    pm.expect(jsonData.description).to.contain(\"java.lang.NumberFormatException: For input string: \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/text",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"text"
									]
								}
							},
							"response": []
						},
						{
							"name": "BUG - Get contact info - on ID = spec symbols (http://jira.lan:8080/browse/IC-421)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check - contact received if - String\", function () {\r",
											"   \r",
											"    pm.expect(jsonData.description).to.contain(\"java.lang.NumberFormatException: For input string: \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/%",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"%"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contact info - on ID Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check -contacts on ID received\", function () {\r",
											"   \r",
											"    pm.expect(jsonData.id).to.eql(4);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/22",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"22"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get contact info - contacts Not Found - NEW Employee",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"var id = pm.collectionVariables.get(\"empl_id\");\r",
											"\r",
											"\r",
											"pm.test(\"Check - contacts not found\", function () {\r",
											"   \r",
											"    pm.expect(jsonData.description).to.eql(\"Контакты сотрудника не найдены, id: \"+id);\r",
											"    pm.expect(jsonData.details).to.eql(\"Контакты сотрудника не найдены, id: \"+id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/50",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"50"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "Get all contact info - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Create contact",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"  var jsonData = pm.response.json();\r",
											"    var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.collectionVariables.set(\"contact_ID\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"phone\": \"79784563214\",\r\n  \"telegram\": \"string\",\r\n  \"chatTelegramId\": \"string\",\r\n  \"skype\": \"string\",\r\n  \"email\": \"string@mail.ru\",\r\n  \"employeeId\": 50\r\n}"
								},
								"url": {
									"raw": "http://employee-dev.lan/api/employee-contact",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"employee-contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete contact on ID employee",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"{{contact_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete contact if it was already delete",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var contact_id = pm.collectionVariables.get(\"contact_ID\");\r",
											"\r",
											"pm.test(\"Check error message response\", function () {\r",
											"    pm.expect(jsonData.description).to.eql(\"Контакты сотрудника не найдены, id: \"+contact_id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/{{contact_ID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"{{contact_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete contact if it was already delete Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-contact/162",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-contact",
										"162"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "salary",
			"item": [
				{
					"name": "Create salary. Validation",
					"item": [
						{
							"name": "authorization",
							"item": [
								{
									"name": "authorization Сотрудник",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponce = pm.response.json();\r",
													"pm.environment.set(\"token_сollaborator\", jsonResponce.access_token)\r",
													"pm.environment.set(\"refresh_token_collaborator\", jsonResponce.refresh_token)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "{{username_сollaborator}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password_collaborator}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "core",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "d11e83a3-95cc-460c-9289-511d36d3e3fb",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_auth_url}}/auth/realms/freeipa-realm/protocol/openid-connect/token",
											"host": [
												"{{base_auth_url}}"
											],
											"path": [
												"auth",
												"realms",
												"freeipa-realm",
												"protocol",
												"openid-connect",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "authorization РН",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponce = pm.response.json();\r",
													"pm.environment.set(\"token_rn\", jsonResponce.access_token)\r",
													"pm.environment.set(\"refresh_token_rn\", jsonResponce.refresh_token)\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "{{username_rn}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password_rn}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "core",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "d11e83a3-95cc-460c-9289-511d36d3e3fb",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_auth_url}}/auth/realms/freeipa-realm/protocol/openid-connect/token",
											"host": [
												"{{base_auth_url}}"
											],
											"path": [
												"auth",
												"realms",
												"freeipa-realm",
												"protocol",
												"openid-connect",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Общая валидация",
							"item": [
								{
									"name": "Создание зарплаты",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Только обязательные параметры",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Без прав на создание",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_сollaborator}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Сотрудник из другого отдела",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_сollaborator}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Устаревший токен",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{old_token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Не валидный токен",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{no_valid_token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Валидация salary",
							"item": [
								{
									"name": "Без salary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": null,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Пустое значение в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": \"\",\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Вверхрнее преграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 99999999.98,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Вверхрнее граничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 99999999.99,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Вверхрнее постграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 100000000.00,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "3 знака после запятой",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 999999.990,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 0,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": -1,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число преграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": -99999999.98,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число граничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": -99999999.99,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число постграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": -100000000.00,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": \"100000.1\",\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Строка в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": \"String\",\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Строка без \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": String,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Булевое выражение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": true,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Научная запись числа",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 0.001E03,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Спецсимволы в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": \"!№;%:?\",\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Спецсимволы без \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": !№;%:?,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Эмодзи в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": \"😅👶💑🌘🌏🥫🏌️‍♀️💒🏔📜📆🔰➗🇭🇳🇸🇹🇿🇦\",\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Эмодзи без \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": 😅👶💑🌘🌏🥫🏌️‍♀️💒🏔📜📆🔰➗🇭🇳🇸🇹🇿🇦,\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Валидация startDate",
							"item": [
								{
									"name": "Без startDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": null,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Дата 01.01.0001",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"01.01.0001\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Дата 31.12.9999",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"31.12.9999\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Булевое значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": true,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Пустое значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Запись даты через ,",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"01,01,2024\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Запись даты без .",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"01012024\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Запись даты через /",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"01/01/2024\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Запись даты timestamp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"2024-01-01\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Положительное число",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": 1,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": 0,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": -1,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число дня даты",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"-1.01.2024\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное число месяца даты",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"01.-1.2024\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Строка в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"String\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Строка без \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": String,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Эмодзи с \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"😅👶💑🌘🌏🥫🏌️‍♀️💒🏔📜📆🔰➗🇭🇳🇸🇹🇿🇦\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Эмодзи без \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": 😅👶💑🌘🌏🥫🏌️‍♀️💒🏔📜📆🔰➗🇭🇳🇸🇹🇿🇦,\r\n    \"employeeId\": {{employee_id}},\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Валидация Employee id",
							"item": [
								{
									"name": "Без employee id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Пустое значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": \"\",\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": \"{{employee_id}}\",\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": null,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": 0,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": -1,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Преграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": 9223372036854775806,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Граничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": 9223372036854775807,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Постграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": 9223372036854775808,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное преграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": -9223372036854775807,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное граничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": -9223372036854775808,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отрицательное постграничное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": -9223372036854775809,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Дробное значение с ,",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": \"{{employee_id}},1\",\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Дробное значение с .",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": \"{{employee_id}}.1\",\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Булевое выражение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": true,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Научный вид числа",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": 0.001E03,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Строка в \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": \"String\",\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Строка без \"\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": String,\r\n    \"is_planned\": {{default_is_planned}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Валидация is_planned",
							"item": [
								{
									"name": "Значение true",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponce = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Value is planned\", function () {\r",
													"    pm.expect(jsonResponce.isPlanned).to.equal(true)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"is_planned\": true,\r\n    \"employeeId\": {{employee_id}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение false",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponce = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Value is planned\", function () {\r",
													"    pm.expect(jsonResponce.isPlanned).to.equal(false)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"isPlanned\": false,\r\n    \"employeeId\": {{employee_id}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponce = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Value is planned\", function () {\r",
													"    pm.expect(jsonResponce.isPlanned).to.equal(true)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"isPlanned\": 1,\r\n    \"employeeId\": {{employee_id}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponce = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Value is planned\", function () {\r",
													"    pm.expect(jsonResponce.isPlanned).to.equal(false)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"isPlanned\": 0,\r\n    \"employeeId\": {{employee_id}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Без is_planned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"employeeId\": {{employee_id}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Значение null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"salary\": {{default_salary}},\r\n    \"startDate\": \"{{default_startDate}}\",\r\n    \"is_planned\": null,\r\n    \"employeeId\": {{employee_id}},\r\n    \"comment\": \"{{default_comment}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/salary",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get salary by employee id. Validation",
					"item": [
						{
							"name": "Общая валидация",
							"item": [
								{
									"name": "Получить зарплату по Id сотрудника",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_rn}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/salary/{{employee_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"salary",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "work-format-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "User RM",
							"item": [
								{
									"name": "Get format on Name - if user = RM",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check id - user RM\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/work-format/department/name/Офис",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"work-format",
												"department",
												"name",
												"Офис"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get format if user = RM - format not exist (Error)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Check Error - user RM\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Тип формата работы Багамы не найден\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/work-format/department/name/Багамы",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"work-format",
												"department",
												"name",
												"Багамы"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get format on Id - if user = RM - BUG (http://jira.lan:8080/browse/IC-413)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/work-format/department/id/2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"work-format",
												"department",
												"id",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get format user = RM - if RM not for this employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Test error response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"You are not the manager of this employee\");\r",
													"    pm.expect(jsonData.details).to.eql(\"You are not the manager of this employee\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/work-format/department/id/3",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"work-format",
												"department",
												"id",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get format if user = RM - if name not specified (empty)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Check id - user RM\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const postRequest = {\r",
													"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
													"  method: 'POST',\r",
													"  timeout: 0,\r",
													"  header: {\r",
													"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
													"  },\r",
													"  body: {\r",
													"    mode: 'urlencoded',\r",
													"    urlencoded: [\r",
													"        {key: \"grant_type\", value: \"password\"},\r",
													"        {key:\"username\", value: \"admin\"},\r",
													"        {key:\"password\", value: \"admin\"},\r",
													"        {key:\"client_id\", value: \"core\"},\r",
													"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
													"    ]}\r",
													"};\r",
													"pm.sendRequest(postRequest, function (err, res) {\r",
													"    var responseJson = res.json();\r",
													"    console.log(responseJson);\r",
													"    pm.environment.set('token_admin', responseJson['access_token']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{base_url}}/work-format/department/name/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"work-format",
												"department",
												"name",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get work format on Id - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check work format name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.value).to.eql(\"Офис\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get work format on Id - user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All work format",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var data = JSON.parse(responseBody);  \r",
											"\r",
											"pm.test(\"Work format types Tests. It must be only two items.\", function () {\r",
											"   pm.expect(data.length).to.eql(2);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Bug - Get work format on Value - http://jira.lan:8080/browse/IC-411",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check work format name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.value).to.eql(\"Офис\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/Офис",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"Офис"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Id work format on Name",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/name/Удалённо",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"name",
										"Удалённо"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create new work_format - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"// записываем Id формата работы в переменные коллекции\r",
											"pm.collectionVariables.set(\"ID_newWorkFormat\", jsonData.id);\r",
											"pm.collectionVariables.set(\"Name_newWorkFormat\", jsonData.value);\r",
											"\r",
											"\r",
											"pm.test(\"Check created name\", function () {\r",
											"    pm.expect(jsonData.value).to.eql(\"new_format\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"new_format\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new work_format - User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"new_format\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check created WorkFormat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.get(\"Name_newWorkFormat\");\r",
											"\r",
											"pm.test(\"Check that work format was created\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.value).to.eql(\"new_format\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/{{ID_newWorkFormat}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete new work format",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/{{ID_newWorkFormat}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new work_wormat - blank - Error",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check error if name - blank\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Поле value: must not be blank\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new work_wormat - Number - Bug (http://jira.lan:8080/browse/IC-412)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"213324\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete new work format",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/7",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new format if Double - Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string Error double Create\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"добавления или обновления записи в бд\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"new_format\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new format Error - if  name = 25 symbols",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//-----------------------------------------------\r",
											" function randomString(length=1) {\r",
											"        let randomString = \"\";\r",
											"        for (let i = 0; i < length; i++){\r",
											"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
											"        }\r",
											"        return randomString;\r",
											"    }\r",
											"    \r",
											"    STRING_LEN = 25\r",
											"    pm.collectionVariables.set('RandomString25', randomString(STRING_LEN));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"{{RandomString25}}\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete new work format",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/7",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new format Error - if  name = 26 symbols - Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Body matches string Error to length format name\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"добавления или обновления записи в бд\");\r",
											"    pm.expect(jsonData.details).to.eql(\"ERROR: value too long for type character varying(25)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//-----------------------------------------------\r",
											" function randomString(length=1) {\r",
											"        let randomString = \"\";\r",
											"        for (let i = 0; i < length; i++){\r",
											"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
											"        }\r",
											"        return randomString;\r",
											"    }\r",
											"    \r",
											"    STRING_LEN = 26\r",
											"    pm.collectionVariables.set('RandomString26', randomString(STRING_LEN));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"{{RandomString26}}\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new format - JS injection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//-----------------------------------------------\r",
											" function randomString(length=1) {\r",
											"        let randomString = \"\";\r",
											"        for (let i = 0; i < length; i++){\r",
											"            randomString += pm.collectionVariables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
											"        }\r",
											"        return randomString;\r",
											"    }\r",
											"    \r",
											"    STRING_LEN = 26\r",
											"    pm.collectionVariables.set('RandomString26', randomString(STRING_LEN));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"<script>alert('Executing JS')</script>\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Create new work_wormat - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"// записываем Id формата работы в переменные коллекции\r",
											"pm.collectionVariables.set(\"ID_newWorkFormat\", jsonData.id);\r",
											"pm.collectionVariables.set(\"Name_newWorkFormat\", jsonData.value);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"{{RandomString25}}\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete work format - if ID not Exist - Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Тип формата работы не найден, id: 1579898\");\r",
											"    pm.expect(jsonData.details).to.eql(\"Тип формата работы не найден, id: 1579898\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/1579898",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"1579898"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete new work format - user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/{{ID_newWorkFormat}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete new work format - admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/{{ID_newWorkFormat}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get that work format was delete",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var id = pm.collectionVariables.get(\"ID_newWorkFormat\");\r",
											"\r",
											"pm.test(\"Check that work format was delete\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Тип формата работы не найден, id: \" + id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/{{ID_newWorkFormat}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete work format if Id not present in response",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "Create work_wormat",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											"// записываем Id формата работы в переменные коллекции\r",
											"pm.collectionVariables.set(\"ID_newWorkFormat\", jsonData.id);\r",
											"pm.collectionVariables.set(\"Name_newWorkFormat\", jsonData.value);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"test\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/work-format",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Work format - Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check changed name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.value).to.eql(\"new_name\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"new_name\"\r\n}"
								},
								"url": {
									"raw": "http://employee-dev.lan/api/work-format/{{ID_newWorkFormat}}",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Work format - User - Error",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"New name if User\"\r\n}"
								},
								"url": {
									"raw": "http://employee-dev.lan/api/work-format/10",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"work-format",
										"10"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Work format - if name blank",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);  \r",
											"  \r",
											"pm.test(\"Name Not Exist - Error test\", function () {\r",
											"\r",
											"    pm.expect(data[0].description).to.eql(\"Поле value: must not be blank\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": \"\"\r\n}"
								},
								"url": {
									"raw": "http://employee-dev.lan/api/work-format/{{ID_newWorkFormat}}",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Work format - number - Bug (http://jira.lan:8080/browse/IC-412)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"value\": 11525512\r\n}"
								},
								"url": {
									"raw": "http://employee-dev.lan/api/work-format/{{ID_newWorkFormat}}",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete new work format",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/work-format/{{ID_newWorkFormat}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"work-format",
										"{{ID_newWorkFormat}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "timesheet-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all timesheets - auth admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/timesheet",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"timesheet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all timesheets - auth user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/timesheet/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"timesheet",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "? - Get timesheets - authorized user -Как получить табеля зарегистрированного пользователем",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/timesheet/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"timesheet",
										"employee"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create new timesheet - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": 1,\r\n  \"employeeId\": 4,\r\n  \"date\": \"02.06.2023\",\r\n  \"time\": \"18:00\",\r\n  \"task\": \"Задача 1\",\r\n  \"description\": \"Табель учета рабочего времени № 2\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/timesheet",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"timesheet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new timesheet - user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": 3,\r\n  \"employeeId\": 4,\r\n  \"date\": \"02.05.2023\",\r\n  \"time\": \"18:00\",\r\n  \"task\": \"Задача 1\",\r\n  \"description\": \"Табель учета рабочего времени Главнова Андрея Андреевича\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/timesheet",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"timesheet"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": []
				},
				{
					"name": "DELETE",
					"item": []
				},
				{
					"name": "PATCH",
					"item": []
				}
			]
		},
		{
			"name": "technology-topic-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all tecnology topic types",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/technologyTopic",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"technologyTopic"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "technology-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all technology types",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/technology",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"technology"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "project-type-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all Technology On Project",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/projectRole",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"projectRole"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "position-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all position - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/location",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"location"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "language-level-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all language levels - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/language-level",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"language-level"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "interview-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all interview types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/interview?size=10&page=0",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"interview"
									],
									"query": [
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "grade-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all grade types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/grade",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"grade"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "financial-condition-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all financial conditions of projects - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/employeeProjectStatus",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"employeeProjectStatus"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "employee-project-status-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all status types of project - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/employeeProjectStatus",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"employeeProjectStatus"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "employee-status-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all employee status types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Count of Status Employee test\", function () {\r",
											"    pm.expect(data.length).to.eql(10);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all employee status types - user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//https://docs.google.com/document/d/1G_Si5kdsdLm86pFmj2b2g8kB8smzKj_Dvz4we3K9_To/edit - 5 ролевая модель\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Count of Status Employee test\", function () {\r",
											"    pm.expect(data.length).to.eql(10);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get employee status type on ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check name Employee status, searched on ID\", function () {\r",
											"    pm.expect(data.employeeStatus).to.eql(\"ИС: в процессе\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-status/4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-status",
										"4"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create new employee status - admin ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"employeeStatus_ID\", jsonData.id);\r",
											"\r",
											"pm.test(\"Check new employee status created\", function () {\r",
											"    pm.expect(jsonData.employeeStatus).to.eql(\"new employee status\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"employeeStatus\": \"new employee status\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/employee-status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-status"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Delete employee status on ID - user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"konstantin.kostylev@irlix.ru\"},\r",
											"        {key:\"password\", value: \"P@ssw0rd4323\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_user', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-status/{{employeeStatus_ID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-status",
										"{{employeeStatus_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete employee status on ID - admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/employee-status/{{employeeStatus_ID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"employee-status",
										"{{employeeStatus_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://employee-dev.lan/api/employee-status/11",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/employee-status/11",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"employee-status",
										"11"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "department-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all department types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{base_url}}/department",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"department"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "curriculum-vitae-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all cirriculum-vitae - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/curriculum-vitae",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"curriculum-vitae"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "curriculum-vitae-project-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all cirricue vitae project types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/curriculum-vitae-project",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"curriculum-vitae-project"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "currency-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all currensy types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/currency",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"currency"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "country-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all countries - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/country",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"country"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "contact-role-controller",
			"item": [
				{
					"name": "GET",
					"item": []
				},
				{
					"name": "Get contact role types - admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"password\"},\r",
									"        {key:\"username\", value: \"admin\"},\r",
									"        {key:\"password\", value: \"admin\"},\r",
									"        {key:\"client_id\", value: \"core\"},\r",
									"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('token_admin', responseJson['access_token']);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "http://employee-dev.lan/api/contactRole",
							"protocol": "http",
							"host": [
								"employee-dev",
								"lan"
							],
							"path": [
								"api",
								"contactRole"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "remote-employee-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all remote employee - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/remote-employee/department",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"remote-employee",
										"department"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "employment-type-controller",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get all employment types - admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: \"admin\"},\r",
											"        {key:\"password\", value: \"admin\"},\r",
											"        {key:\"client_id\", value: \"core\"},\r",
											"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('token_admin', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "http://employee-dev.lan/api/employment-type",
									"protocol": "http",
									"host": [
										"employee-dev",
										"lan"
									],
									"path": [
										"api",
										"employment-type"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Get all employment status types",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const postRequest = {\r",
							"  url: 'http://keycloak-dev.lan/auth/realms/freeipa-realm/protocol/openid-connect/token',\r",
							"  method: 'POST',\r",
							"  timeout: 0,\r",
							"  header: {\r",
							"    \"Content-Type\": \"application/x-www-form-urlencoded\"\r",
							"  },\r",
							"  body: {\r",
							"    mode: 'urlencoded',\r",
							"    urlencoded: [\r",
							"        {key: \"grant_type\", value: \"password\"},\r",
							"        {key:\"username\", value: \"admin\"},\r",
							"        {key:\"password\", value: \"admin\"},\r",
							"        {key:\"client_id\", value: \"core\"},\r",
							"        {key:\"client_secret\", value: \"d11e83a3-95cc-460c-9289-511d36d3e3fb\"}\r",
							"    ]}\r",
							"};\r",
							"pm.sendRequest(postRequest, function (err, res) {\r",
							"    var responseJson = res.json();\r",
							"    console.log(responseJson);\r",
							"    pm.environment.set('token_admin', responseJson['access_token']);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "http://employee-dev.lan/api/employee-status",
					"protocol": "http",
					"host": [
						"employee-dev",
						"lan"
					],
					"path": [
						"api",
						"employee-status"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://keycloak-dev.lan/auth/realms/master/login-actions/authenticate",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://keycloak-dev.lan/auth/realms/master/login-actions/authenticate?session_code=s0xuNJJ0gnZZyhirokJ9ZXDe6kuW3r3W1XmNRTfMJ64&execution=6192601c-0f9c-4fa6-a898-1e11ce33aafd&client_id=security-admin-console&tab_id=pUXWdYdX8dU",
					"protocol": "http",
					"host": [
						"keycloak-dev",
						"lan"
					],
					"path": [
						"auth",
						"realms",
						"master",
						"login-actions",
						"authenticate"
					],
					"query": [
						{
							"key": "session_code",
							"value": "s0xuNJJ0gnZZyhirokJ9ZXDe6kuW3r3W1XmNRTfMJ64"
						},
						{
							"key": "execution",
							"value": "6192601c-0f9c-4fa6-a898-1e11ce33aafd"
						},
						{
							"key": "client_id",
							"value": "security-admin-console"
						},
						{
							"key": "tab_id",
							"value": "pUXWdYdX8dU"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token_admin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token_user",
			"value": ""
		},
		{
			"key": "empl_id",
			"value": ""
		},
		{
			"key": "RandomString",
			"value": ""
		},
		{
			"key": "RandomString1001",
			"value": ""
		},
		{
			"key": "RandomString255",
			"value": ""
		},
		{
			"key": "RandomString256",
			"value": ""
		},
		{
			"key": "ID_newWorkFormat",
			"value": ""
		},
		{
			"key": "Name_newWorkFormat",
			"value": ""
		},
		{
			"key": "RandomString25",
			"value": ""
		},
		{
			"key": "RandomString26",
			"value": ""
		},
		{
			"key": "RandomString1000",
			"value": ""
		},
		{
			"key": "RandomString2000",
			"value": ""
		},
		{
			"key": "RandomString10000",
			"value": ""
		},
		{
			"key": "RandomString100000",
			"value": ""
		},
		{
			"key": "RandomString4000",
			"value": ""
		},
		{
			"key": "RandomString4001",
			"value": ""
		},
		{
			"key": "employeeStatus_ID",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "rand_phone",
			"value": ""
		},
		{
			"key": "contact_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "contact_ID_2",
			"value": "",
			"type": "string"
		},
		{
			"key": "RandomString101",
			"value": ""
		},
		{
			"key": "RandomString100",
			"value": ""
		},
		{
			"key": "RandomString51",
			"value": ""
		},
		{
			"key": "RandomString50",
			"value": ""
		}
	]
}